@model Bis.Models.shift

@{
    ViewBag.Title = "Details";
}


<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="card">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">Shift Details</h5>
                    <div class="header-elements">
                        <div class="list-icons">
                            @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-primary" })
                            @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @class = "btn btn-success" })
                        </div>
                    </div>
                </div>
                <div class="card-body">

                    <div class="form-group row">
                        <label class="col-lg-2 font-weight-bold">Shift Name</label>:
                        <div class="col-lg-9">
                            @Html.DisplayFor(model => model.Name)
                        </div>
                    </div>



                    <div class="form-group row">
                        <label class="col-lg-2 font-weight-bold">Starting Time</label>:
                        <div class="col-lg-9">
                            @Html.DisplayFor(model => model.StartingTime)
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-lg-2 font-weight-bold">Ending Time</label>:
                        <div class="col-lg-9">
                            @Html.DisplayFor(model => model.EndingTime)
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-lg-2 font-weight-bold">Over Time</label>:
                        <div class="col-lg-9">
                            @Html.DisplayFor(model => model.OverTime)
                        </div>
                    </div>

                </div>

            </div>
        }
    </div>
</div>