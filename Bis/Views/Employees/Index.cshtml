@model IEnumerable<Bis.Models.Employee>

@{
    ViewBag.Title = "Index";
}


<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header header-elements-inline">
                <h5 class="card-title">Employee</h5>
                <div class="header-elements">
                    <div class="list-icons">
                        @Html.ActionLink("Create New", "Create",null,new { @class = "btn btn-primary" })
                        @*<a href="/Users/Create" class="btn btn-primary">Add</a>*@
                    </div>
                </div>
            </div>
            <table class="table datatable-basic" id="tblData">
                <thead>
                    <tr>
                        <th>
                           Category Name
                        </th>
                        <th>
                            Department Name
                        </th>
                        <th>
                           SubCategory Name
                        </th>
                        <th>
                            EmployeeId
                        </th>
                        <th>
                           Name
                        </th>
                        <th>
                            Gender
                        </th>
                        <th>
                            Phone Number
                        </th>
                        <th>
                           Adhar Number
                        </th>
                        <th>
                            Grade
                        </th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Category.name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Department.name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SubCategory.name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.employeeId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.gender)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.phoneNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.adharNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.grade)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.id }) |
                                @Html.ActionLink("Details", "Details", new { id = item.id }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.id }, new { onclick = "return confirm('Are sure to delete this item?');" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<script>
    $(function () {
        $("#tblData").dataTable();
    });
    function exportToExcel() {
        var wscols = [
            { wch: 10 },
            { wch: 20 },
            { wch: 15 },
            { wch: 15 },
            { wch: 15 },
        ];
        var wb = XLSX.utils.table_to_book(document.getElementById("tbladvanceHead"), {
            sheet: "Advance",
            raw: true,
        });
        wb.Sheets["Advance"]["!cols"] = wscols;
        var wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });
        saveAs(new Blob([s2ab(wbout)], { type: "application/octet-stream" }), "Money Transfer.xlsx");
    }
    function s2ab(s) {
        var buf = new ArrayBuffer(s.length);
        var view = new Uint8Array(buf);
        for (var i = 0; i < s.length; i++) {
            view[i] = s.charCodeAt(i) & 0xFF;
        }
        return buf;
    }
</script>







